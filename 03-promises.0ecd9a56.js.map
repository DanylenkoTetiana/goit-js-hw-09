{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAWF,SAASC,cAAc,sBAClCE,EAAUH,SAASC,cAAc,qBACjCG,EAASJ,SAASC,cAAc,qBAgCtC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IApCPR,EAAOgB,iBAAiB,UACxB,SAAsBC,GACpBA,EAAMC,iBAGN,IAFA,IAAIC,EAAkBC,OAAOhB,EAAQiB,OAASD,OAAOf,EAAOgB,OAEnDC,EAAI,EAAGA,GAAKnB,EAASkB,MAAOC,GAAK,EAGxCH,GAAmBC,OAAOf,EAAOgB,OAGjCf,EAAcgB,EAAGH,GACdI,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MACjBV,EAAA2B,OAAOC,QAAQ,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAANnB,EAAM,M,IAE9DoB,OAAM,SAAAJ,G,IAAGjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MAClBV,EAAA2B,OAAOI,QAAQ,sBAAqCF,OAAfpB,EAAS,QAAYoB,OAANnB,EAAM,M,IAE9DsB,QAAQC,IAAIzB,EAAcgB,EAAGH,G","sources":["src/js/03-promises.js"],"sourcesContent":["' use strict';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst formEl = document.querySelector('.form');\nconst amountEl = document.querySelector('input[name=amount]');\nconst delayEl = document.querySelector('input[name=delay]');\nconst stepEl = document.querySelector('input[name= step]');\n// console.log(formEl);\n// const args = [];\n// const numbersArrey = [];\n// const delayArrey = [];\n\nformEl.addEventListener('submit', handleSubmit);\nfunction handleSubmit(event) {\n  event.preventDefault();\n  let calculatedDelay = Number(delayEl.value) - Number(stepEl.value);\n  // let numbers = 1;\n  for (let i = 1; i <= amountEl.value; i += 1) {\n    // numbersArrey.push(i);\n\n    calculatedDelay += Number(stepEl.value);\n    // delayArrey.push(calculatedDelay);\n\n    createPromise(i, calculatedDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    console.log(createPromise(i, calculatedDelay));\n    // console.log(numbersArrey);\n    // console.log(delayArrey);\n  }\n}\n\n// console.log(createPromise(1, 3000));\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","calculatedDelay","Number","value","i","then","param","Notify","success","concat","catch","failure","console","log"],"version":3,"file":"03-promises.0ecd9a56.js.map"}